print(line$disruptions)                       # Most of the time there are none
}
load("/Users/Craig/OneDrive - University of Glasgow/R Programming/2020-2021/Lecture Material/Week 3/addresses.RData")
addresses
dim(addresses)
length(addresses)
load("/Users/Craig/OneDrive - University of Glasgow/R Programming/2019-2020/Assignment 1/a1.RData")
load(url("http://www.stats.gla.ac.uk/~levers/rp/t2.RData"))
?load
a <- 1
a
a <- 2
a
a <- 1
a
a <- 2
a
a <- 1
a <- 2
a <- 1
a <- 2
a <- 1
a <- 2
for weekday in (c("Mon","...","Sun")) {
print(weekday)
}
for weekday in (("Mon","...","Sun")) {
print(weekday)
}
source('~/.active-rstudio-document', echo=TRUE)
2/3*2
2/(3*2)
1/0
Inf/Inf
sqrt(-2)
sqrt(-2+0i)
a <- 5
b <- a/2
b
a <- 5
b <- a/2
b
a <- 10
b
ls()
install.packages("learnr")
devtools::install_github("RamiKrispin/coronavirus")
library(coronavirus)
coronavirus::coronavirus
mtcars2 <- mtcars %>%
transform(lp100k=235.21/mpg) %>%
subset(lp100k<=10)
library(tidyverse)
mtcars2 <- mtcars %>%
transform(lp100k=235.21/mpg) %>%
subset(lp100k<=10)
mtcars %>%
transform(lp100k=235.21/mpg) %>%
subset(lp100k<=10) %$%
cor(disp, hp)
mtcars %>%
transform(lp100k=235.21/mpg) %>%
subset(lp100k<=10) %>%
cor(disp, hp)
library(magrittr)
mtcars %>%
transform(lp100k=235.21/mpg) %>%
subset(lp100k<=10) %$%
cor(disp, hp)
starships
library(dplyr)
starwars
long <- data.frame(patients=c("John","John","Mary","Mary"),
when=c("before",'after','before','after'),
heartrate=c(85,70,78,66))
long
wide <- data.frame(patients=c('John','Mary'),before=c(85,78),
after=c(70,66))
wids
wide
long %>%
spread(when,heartrate)
wide %>%
gather(when,heartrate,patients)
wide %>%
gather(when,heartrate,-patients)
wide
load(url(paste("https://github.com/UofGAnalyticsData/R/raw/",
"main/Week%204/EURef.RData",sep="")))
wards_extended <- wards %>%
inner_join(genelec,by="ConstituencyCode",
suffix=c("Ward","Const")) %>%
mutate(ConVote=ConVote/ElectorateConst*ElectorateWard,
LabVote=LabVote/ElectorateConst*ElectorateWard,
LDVote=LDVote/ElectorateConst*ElectorateWard,
UKIPVote=UKIPVote/ElectorateConst*ElectorateWard,
GreenVote=GreenVote/ElectorateConst*ElectorateWard,
TotalVote=TotalVote/ElectorateConst*ElectorateWard,)
wards_extended
dim(wards)
dim(wards_extended)
dim(genelec)
la_shares <- wards_extended %>%
group_by(LACode) %>%
summarise(ConVote = sum(ConVote)/sum(TotalVote),
LabVote=sum(LabVote)/sum(TotalVote),
LDVote=sum(LDVote)/sum(TotalVote),
UKIPVote=sum(UKIPVote)/sum(TotalVote),
GreenVote=sum(GreenVote)/sum(TotalVote))
la_shares
sum(la_shares[1,])
sum(la_shares[1,-1])
sum(la_shares[2,-1])
sum(la_shares[3,-1])
sum(la_shares[4,-1])
sum(la_shares[5,-1])
wards_extended <- wards %>%
inner_join(genelec, by="ConstituencyCode",
suffix=c("Ward","Const")) %>%
mutate(ConVote=ConVote/ElectorateConst*ElectorateWard,
LabVote=LabVote/ElectorateConst*ElectorateWard,
LDVote=LDVote/ElectorateConst*ElectorateWard,
UKIPVote=UKIPVote/ElectorateConst*ElectorateWard,
GreenVote=GreenVote/ElectorateConst*ElectorateWard,
TotalVote=TotalVote/ElectorateConst*ElectorateWard)
la_shares <- wards_extended %>%
group_by(LACode) %>%
summarise(ConVote=sum(ConVote)/sum(TotalVote),
LabVote=sum(LabVote)/sum(TotalVote),
LDVote=sum(LDVote)/sum(TotalVote),
UKIPVote=sum(UKIPVote)/sum(TotalVote),
GreenVote=sum(GreenVote)/sum(TotalVote))
la_shares
sum(la_shares[5,-1])
qplot(UKIPvote,Leave,data=brexit %>% inner_join(la_shares))
wards_extended <- wards %>%
inner_join(genelec, by="ConstituencyCode",
suffix=c("Ward","Const")) %>%
mutate_at(vars(ConVote:TotalVote),
funs(./ElectorateConst*ElectorateWard))
la_shares <- wards_extended %>%
group_by(LACode) %>%
summarise_at(vars(ConVote:GreenVote),
funs(sum(.)/sum(TotalVote)))
qplot(UKIPvote,Leave,data=brexit %>% inner_join(la_shares))
wards_extended <- wards %>%
inner_join(genelec,by="ConstituencyCode",
suffix=c("Ward","Const")) %>%
mutate(ConVote=ConVote/ElectorateConst*ElectorateWard,
LabVote=LabVote/ElectorateConst*ElectorateWard,
LDVote=LDVote/ElectorateConst*ElectorateWard,
UKIPVote=UKIPVote/ElectorateConst*ElectorateWard,
GreenVote=GreenVote/ElectorateConst*ElectorateWard,
TotalVote=TotalVote/ElectorateConst*ElectorateWard)
la_shares <- wards_extended %>%
group_by(LACode) %>%
summarise(ConVote = sum(ConVote)/sum(TotalVote),
LabVote=sum(LabVote)/sum(TotalVote),
LDVote=sum(LDVote)/sum(TotalVote),
UKIPVote=sum(UKIPVote)/sum(TotalVote),
GreenVote=sum(GreenVote)/sum(TotalVote))
qplot(UKIPVote,Leave,data=brexit %>% inner_join(la_shares))
load(url(paste("https://github.com/UofGAnalyticsData/R/raw/",
"main/Week%204/EURef.RData",sep="")))
library(tidyverse)
library(magrittr)
x <- rnorm(100)
mean(x)
mean(rnorm(100))
rnorm(100) %>%
mean()
View(mtcars)
mtcars2 <- mtcars %>%
transform(lp100k=235.21/mpg) $>$
subset(lp100k <= 10)
mtcars2 <- mtcars %>%
transform(lp100k=235.21/mpg) %>%
subset(lp100k <= 10)
cor(mtcars2$disp,mtcars2$hp)
mtcars %>%
transform(lp100k=235.21/mpg) %>%
subset(lp100k <= 10) %$%
cor(disp,hp)
mtcars %<>%
transform(lp100k=235.21/mpg) %>%
subset(lp100k <= 10)
View(mtcars)
long
long <- data.frame(patients=c("John","John","Mary","Mary"),
when=c("before",'after','before','after'),
heartrate=c(85,70,78,66))
long
wide <- data.frame(patients=c('John','Mary'),before=c(85,78),
after=c(70,66))
wide
long %>%
spread(when,heartrate)
wide %>%
gather(when,heartrate,-patients)
load(url(paste("https://github.com/UofGAnalyticsData/R/raw/",
"main/Week%204/EURef.RData",sep="")))
load(url("https://github.com/UofGAnalyticsData/R/raw/65e4e505e442a22490595d4b63868846234eacaf/Week%204/EURef.RData"))
setwd("~/Documents/GitHub/R/Week 4")
save(brexit,genelec,sgrades,wards,file="EURef.RData")
library(devtools)
library(pander)
library(VennDiagram)
library(tinytex)
library(xtable)
library(ggplot2)
##Load BOLD Tools
setwd("~/OneDrive - University of Glasgow/R Programming/2020-2021/BOLDtools-master")
devtools::load_all("./")
##Compile notes
setwd("~/Documents/GitHub/BOLDrprog/coursematerial")
#setwd("~/Documents/GitHub/BOLDmath")
build(target="PDF")
library(devtools)
library(pander)
library(VennDiagram)
library(tinytex)
library(xtable)
library(ggplot2)
##Load BOLD Tools
setwd("~/OneDrive - University of Glasgow/R Programming/2020-2021/BOLDtools-master")
devtools::load_all("./")
##Compile notes
setwd("~/Documents/GitHub/BOLDrprog/coursematerial")
#setwd("~/Documents/GitHub/BOLDmath")
build(target="PDF")
library(devtools)
library(pander)
library(VennDiagram)
library(tinytex)
library(xtable)
library(ggplot2)
##Load BOLD Tools
setwd("~/OneDrive - University of Glasgow/R Programming/2020-2021/BOLDtools-master")
devtools::load_all("./")
##Compile notes
setwd("~/Documents/GitHub/BOLDrprog/coursematerial")
#setwd("~/Documents/GitHub/BOLDmath")
build(target="PDF")
library(devtools)
library(pander)
library(VennDiagram)
library(tinytex)
library(xtable)
library(ggplot2)
##Load BOLD Tools
setwd("~/OneDrive - University of Glasgow/R Programming/2020-2021/BOLDtools-master")
devtools::load_all("./")
##Compile notes
setwd("~/Documents/GitHub/BOLDrprog/coursematerial")
#setwd("~/Documents/GitHub/BOLDmath")
build(target="PDF")
library(devtools)
library(pander)
library(VennDiagram)
library(tinytex)
library(xtable)
library(ggplot2)
##Load BOLD Tools
setwd("~/OneDrive - University of Glasgow/R Programming/2020-2021/BOLDtools-master")
devtools::load_all("./")
##Compile notes
setwd("~/Documents/GitHub/BOLDrprog/coursematerial")
#setwd("~/Documents/GitHub/BOLDmath")
build(target="PDF")
library(devtools)
library(pander)
library(VennDiagram)
library(tinytex)
library(xtable)
library(ggplot2)
##Load BOLD Tools
setwd("~/OneDrive - University of Glasgow/R Programming/2020-2021/BOLDtools-master")
devtools::load_all("./")
##Compile notes
setwd("~/Documents/GitHub/BOLDrprog/coursematerial")
#setwd("~/Documents/GitHub/BOLDmath")
build(target="PDF")
library(devtools)
library(pander)
library(VennDiagram)
library(tinytex)
library(xtable)
library(ggplot2)
##Load BOLD Tools
setwd("~/OneDrive - University of Glasgow/R Programming/2020-2021/BOLDtools-master")
devtools::load_all("./")
##Compile notes
setwd("~/Documents/GitHub/BOLDrprog/coursematerial")
#setwd("~/Documents/GitHub/BOLDmath")
build(target="PDF")
library(devtools)
library(pander)
library(VennDiagram)
library(tinytex)
library(xtable)
library(ggplot2)
##Load BOLD Tools
setwd("~/OneDrive - University of Glasgow/R Programming/2020-2021/BOLDtools-master")
devtools::load_all("./")
##Compile notes
setwd("~/Documents/GitHub/BOLDrprog/coursematerial")
#setwd("~/Documents/GitHub/BOLDmath")
build(target="PDF")
library(devtools)
library(pander)
library(VennDiagram)
library(tinytex)
library(xtable)
library(ggplot2)
##Load BOLD Tools
setwd("~/OneDrive - University of Glasgow/R Programming/2020-2021/BOLDtools-master")
devtools::load_all("./")
##Compile notes
setwd("~/Documents/GitHub/BOLDrprog/coursematerial")
#setwd("~/Documents/GitHub/BOLDmath")
build(target="PDF")
library(devtools)
library(pander)
library(VennDiagram)
library(tinytex)
library(xtable)
library(ggplot2)
##Load BOLD Tools
setwd("~/OneDrive - University of Glasgow/R Programming/2020-2021/BOLDtools-master")
devtools::load_all("./")
##Compile notes
setwd("~/Documents/GitHub/BOLDrprog/coursematerial")
#setwd("~/Documents/GitHub/BOLDmath")
build(target="PDF")
install.packages("kable")
library(devtools)
library(pander)
library(VennDiagram)
library(tinytex)
library(xtable)
library(ggplot2)
##Load BOLD Tools
setwd("~/OneDrive - University of Glasgow/R Programming/2020-2021/BOLDtools-master")
devtools::load_all("./")
##Compile notes
setwd("~/Documents/GitHub/BOLDrprog/coursematerial")
#setwd("~/Documents/GitHub/BOLDmath")
build(target="PDF")
library(devtools)
library(pander)
library(VennDiagram)
library(tinytex)
library(xtable)
library(ggplot2)
##Load BOLD Tools
setwd("~/OneDrive - University of Glasgow/R Programming/2020-2021/BOLDtools-master")
devtools::load_all("./")
##Compile notes
setwd("~/Documents/GitHub/BOLDrprog/coursematerial")
#setwd("~/Documents/GitHub/BOLDmath")
build(target="PDF")
library(devtools)
library(pander)
library(VennDiagram)
library(tinytex)
library(xtable)
library(ggplot2)
##Load BOLD Tools
setwd("~/OneDrive - University of Glasgow/R Programming/2020-2021/BOLDtools-master")
devtools::load_all("./")
##Compile notes
setwd("~/Documents/GitHub/BOLDrprog/coursematerial")
#setwd("~/Documents/GitHub/BOLDmath")
build(target="PDF")
library(devtools)
library(pander)
library(VennDiagram)
library(tinytex)
library(xtable)
library(ggplot2)
##Load BOLD Tools
setwd("~/OneDrive - University of Glasgow/R Programming/2020-2021/BOLDtools-master")
devtools::load_all("./")
##Compile notes
setwd("~/Documents/GitHub/BOLDrprog/coursematerial")
#setwd("~/Documents/GitHub/BOLDmath")
build(target="PDF")
library(devtools)
library(pander)
library(VennDiagram)
library(tinytex)
library(xtable)
library(ggplot2)
##Load BOLD Tools
setwd("~/OneDrive - University of Glasgow/R Programming/2020-2021/BOLDtools-master")
devtools::load_all("./")
##Compile notes
setwd("~/Documents/GitHub/BOLDrprog/coursematerial")
#setwd("~/Documents/GitHub/BOLDmath")
build(target="PDF")
install.packages("mgcViz")
library(mgcViz)
?getViz
library(devtools)
library(pander)
library(VennDiagram)
library(tinytex)
library(xtable)
library(ggplot2)
##Load BOLD Tools
setwd("~/OneDrive - University of Glasgow/R Programming/2020-2021/BOLDtools-master")
devtools::load_all("./")
##Compile notes
setwd("~/Documents/GitHub/BOLDrprog/coursematerial")
#setwd("~/Documents/GitHub/BOLDmath")
build(target="PDF")
library(devtools)
library(pander)
library(VennDiagram)
library(tinytex)
library(xtable)
library(ggplot2)
##Load BOLD Tools
setwd("~/OneDrive - University of Glasgow/R Programming/2020-2021/BOLDtools-master")
devtools::load_all("./")
##Compile notes
setwd("~/Documents/GitHub/BOLDrprog/coursematerial")
#setwd("~/Documents/GitHub/BOLDmath")
build(target="PDF")
library(devtools)
library(pander)
library(VennDiagram)
library(tinytex)
library(xtable)
library(ggplot2)
##Load BOLD Tools
setwd("~/OneDrive - University of Glasgow/R Programming/2020-2021/BOLDtools-master")
devtools::load_all("./")
##Compile notes
setwd("~/Documents/GitHub/BOLDrprog/coursematerial")
#setwd("~/Documents/GitHub/BOLDmath")
build(target="PDF")
n <- 1e3
x <- runif(n, 0, 2*pi)                   # x is random uniform from (0,2*pi)
y <- sin(x)                              # Set y to the sine of x
y.noisy <- y + .25 * rnorm(n)            # Create noisy version of y
ggplot() +                               # No need to use data=... as x, y and y.noisy
# are variables in the workspace and not columns
# in a dataset
geom_point(aes(x, y.noisy)) +
geom_line(aes(x, y))
library(devtools)
library(pander)
library(VennDiagram)
library(tinytex)
library(xtable)
library(ggplot2)
##Load BOLD Tools
setwd("~/OneDrive - University of Glasgow/R Programming/2020-2021/BOLDtools-master")
devtools::load_all("./")
##Compile notes
setwd("~/Documents/GitHub/BOLDrprog/coursematerial")
#setwd("~/Documents/GitHub/BOLDmath")
build(target="PDF")
load(url("https://github.com/UofGAnalyticsData/R/raw/main/Week%206/t3.RData"))
stations
stations$city
load(url("https://github.com/UofGAnalyticsData/R/raw/main/Week%206/t3.RData"))
boundingbox <- c(left = -122.5, bottom = 37.25, right = -121.75, top = 38)
map <- get_map(boundingbox, zoom=9, source="stamen")
ggmap(map) +
geom_point(data=stations, aes(x=long, y=lat,  colour=city)) +
xlab("Longitude") + ylab("Latitude") +
ggtitle("Bicycle stations in the San Francisco Bay Area")
boundingbox <- c(left = -122.43, bottom = 37.76, right = -122.38, top = 37.81)
map <- get_map(boundingbox, zoom=13, source="stamen")
sf_stations <- stations %>%
filter(city=="San Francisco")
ggmap(map) +
geom_point(data=sf_stations, aes(long, lat, size=dockcount), col="orange") +
geom_segment(data=odall, aes(long, lat, xend=long_end, yend=lat_end, alpha=ntrips), col="orange")+
xlab("Longitude") + ylab("Latitude") +
ggtitle("Bicycle trips in San Francisco")
sf_stations
load(url("https://github.com/UofGAnalyticsData/R/raw/main/Week%206/t3.RData"))
load(url("https://github.com/UofGAnalyticsData/R/raw/main/Week%206/t3.RData"))
sf_stations <- stations %>% filter(city=="San Francisco")
stations$city
load(url("https://github.com/UofGAnalyticsData/R/raw/main/Week%206/t3.RData"))
library(tidyverse)
sf_stations <- stations[stations$city=="San Francisco",]
od <- trips %>%
filter(start_station_id%in%sf_stations$station_id,
end_station_id%in%sf_stations$station_id) %>%
group_by(start_station_id, end_station_id) %>%
summarise(ntrips=n())
odm <- od %>%
spread(end_station_id, ntrips, fill=0)
odall <- od %>%
inner_join(sf_stations, by=c("start_station_id"="station_id")) %>%
inner_join(sf_stations, by=c("end_station_id"="station_id"),
suffix=c("","_end"))
setwd("~/Documents/GitHub/R/Week 6")
save(odall,file="backup.RData")
library(magrittr)
boundingbox <- c(left = -122.43, bottom = 37.76, right = -122.38, top = 37.81)
map <- get_map(boundingbox, zoom=13, source="stamen")
ggmap(map) +
geom_point(data=sf_stations, aes(long, lat, size=dockcount), col="orange") +
geom_segment(data=odall, aes(long, lat, xend=long_end, yend=lat_end, alpha=ntrips), col="orange")+
xlab("Longitude") + ylab("Latitude") +
ggtitle("Bicycle trips in San Francisco")
